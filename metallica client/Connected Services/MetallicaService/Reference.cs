//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace metallica_client.MetallicaService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseEntity", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(metallica_client.MetallicaService.Chat))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(metallica_client.MetallicaService.Messages))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(metallica_client.MetallicaService.Show))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(metallica_client.MetallicaService.Song))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(metallica_client.MetallicaService.User))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(metallica_client.MetallicaService.Album))]
    public partial class BaseEntity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Chat", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    [System.SerializableAttribute()]
    public partial class Chat : metallica_client.MetallicaService.BaseEntity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ChatManagerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChatNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreationDateField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ChatManager {
            get {
                return this.ChatManagerField;
            }
            set {
                if ((this.ChatManagerField.Equals(value) != true)) {
                    this.ChatManagerField = value;
                    this.RaisePropertyChanged("ChatManager");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChatName {
            get {
                return this.ChatNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ChatNameField, value) != true)) {
                    this.ChatNameField = value;
                    this.RaisePropertyChanged("ChatName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreationDate {
            get {
                return this.CreationDateField;
            }
            set {
                if ((this.CreationDateField.Equals(value) != true)) {
                    this.CreationDateField = value;
                    this.RaisePropertyChanged("CreationDate");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Messages", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    [System.SerializableAttribute()]
    public partial class Messages : metallica_client.MetallicaService.BaseEntity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ChatIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ChatId {
            get {
                return this.ChatIdField;
            }
            set {
                if ((this.ChatIdField.Equals(value) != true)) {
                    this.ChatIdField = value;
                    this.RaisePropertyChanged("ChatId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Show", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    [System.SerializableAttribute()]
    public partial class Show : metallica_client.MetallicaService.BaseEntity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ShowDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShowNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StadiumNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UrlField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ShowDate {
            get {
                return this.ShowDateField;
            }
            set {
                if ((this.ShowDateField.Equals(value) != true)) {
                    this.ShowDateField = value;
                    this.RaisePropertyChanged("ShowDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShowName {
            get {
                return this.ShowNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ShowNameField, value) != true)) {
                    this.ShowNameField = value;
                    this.RaisePropertyChanged("ShowName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StadiumName {
            get {
                return this.StadiumNameField;
            }
            set {
                if ((object.ReferenceEquals(this.StadiumNameField, value) != true)) {
                    this.StadiumNameField = value;
                    this.RaisePropertyChanged("StadiumName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Url {
            get {
                return this.UrlField;
            }
            set {
                if ((object.ReferenceEquals(this.UrlField, value) != true)) {
                    this.UrlField = value;
                    this.RaisePropertyChanged("Url");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Song", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    [System.SerializableAttribute()]
    public partial class Song : metallica_client.MetallicaService.BaseEntity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AlbumIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LyricsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SongNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AlbumId {
            get {
                return this.AlbumIdField;
            }
            set {
                if ((this.AlbumIdField.Equals(value) != true)) {
                    this.AlbumIdField = value;
                    this.RaisePropertyChanged("AlbumId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Lyrics {
            get {
                return this.LyricsField;
            }
            set {
                if ((object.ReferenceEquals(this.LyricsField, value) != true)) {
                    this.LyricsField = value;
                    this.RaisePropertyChanged("Lyrics");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SongName {
            get {
                return this.SongNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SongNameField, value) != true)) {
                    this.SongNameField = value;
                    this.RaisePropertyChanged("SongName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    [System.SerializableAttribute()]
    public partial class User : metallica_client.MetallicaService.BaseEntity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AccesslevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime BirthdateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsMaleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Accesslevel {
            get {
                return this.AccesslevelField;
            }
            set {
                if ((this.AccesslevelField.Equals(value) != true)) {
                    this.AccesslevelField = value;
                    this.RaisePropertyChanged("Accesslevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Birthdate {
            get {
                return this.BirthdateField;
            }
            set {
                if ((this.BirthdateField.Equals(value) != true)) {
                    this.BirthdateField = value;
                    this.RaisePropertyChanged("Birthdate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsMale {
            get {
                return this.IsMaleField;
            }
            set {
                if ((this.IsMaleField.Equals(value) != true)) {
                    this.IsMaleField = value;
                    this.RaisePropertyChanged("IsMale");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Album", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    [System.SerializableAttribute()]
    public partial class Album : metallica_client.MetallicaService.BaseEntity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AlbumNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ReleaseDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SongAmountField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AlbumName {
            get {
                return this.AlbumNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AlbumNameField, value) != true)) {
                    this.AlbumNameField = value;
                    this.RaisePropertyChanged("AlbumName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ReleaseDate {
            get {
                return this.ReleaseDateField;
            }
            set {
                if ((this.ReleaseDateField.Equals(value) != true)) {
                    this.ReleaseDateField = value;
                    this.RaisePropertyChanged("ReleaseDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SongAmount {
            get {
                return this.SongAmountField;
            }
            set {
                if ((this.SongAmountField.Equals(value) != true)) {
                    this.SongAmountField = value;
                    this.RaisePropertyChanged("SongAmount");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="AlbumList", Namespace="http://schemas.datacontract.org/2004/07/Model", ItemName="Album")]
    [System.SerializableAttribute()]
    public class AlbumList : System.Collections.Generic.List<metallica_client.MetallicaService.Album> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ChatList", Namespace="http://schemas.datacontract.org/2004/07/Model", ItemName="Chat")]
    [System.SerializableAttribute()]
    public class ChatList : System.Collections.Generic.List<metallica_client.MetallicaService.Chat> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="MessagesList", Namespace="http://schemas.datacontract.org/2004/07/Model", ItemName="Messages")]
    [System.SerializableAttribute()]
    public class MessagesList : System.Collections.Generic.List<metallica_client.MetallicaService.Messages> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ShowList", Namespace="http://schemas.datacontract.org/2004/07/Model", ItemName="Show")]
    [System.SerializableAttribute()]
    public class ShowList : System.Collections.Generic.List<metallica_client.MetallicaService.Show> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="SongList", Namespace="http://schemas.datacontract.org/2004/07/Model", ItemName="Song")]
    [System.SerializableAttribute()]
    public class SongList : System.Collections.Generic.List<metallica_client.MetallicaService.Song> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="UserList", Namespace="http://schemas.datacontract.org/2004/07/Model", ItemName="User")]
    [System.SerializableAttribute()]
    public class UserList : System.Collections.Generic.List<metallica_client.MetallicaService.User> {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MetallicaService.IMetallicaService")]
    public interface IMetallicaService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetallicaService/InsertAlbum", ReplyAction="http://tempuri.org/IMetallicaService/InsertAlbumResponse")]
        int InsertAlbum(metallica_client.MetallicaService.Album album);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetallicaService/InsertAlbum", ReplyAction="http://tempuri.org/IMetallicaService/InsertAlbumResponse")]
        System.Threading.Tasks.Task<int> InsertAlbumAsync(metallica_client.MetallicaService.Album album);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetallicaService/UpdateAlbum", ReplyAction="http://tempuri.org/IMetallicaService/UpdateAlbumResponse")]
        int UpdateAlbum(metallica_client.MetallicaService.Album album);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetallicaService/UpdateAlbum", ReplyAction="http://tempuri.org/IMetallicaService/UpdateAlbumResponse")]
        System.Threading.Tasks.Task<int> UpdateAlbumAsync(metallica_client.MetallicaService.Album album);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetallicaService/DeleteAlbum", ReplyAction="http://tempuri.org/IMetallicaService/DeleteAlbumResponse")]
        int DeleteAlbum(metallica_client.MetallicaService.Album album);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetallicaService/DeleteAlbum", ReplyAction="http://tempuri.org/IMetallicaService/DeleteAlbumResponse")]
        System.Threading.Tasks.Task<int> DeleteAlbumAsync(metallica_client.MetallicaService.Album album);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetallicaService/SelectAlbum", ReplyAction="http://tempuri.org/IMetallicaService/SelectAlbumResponse")]
        metallica_client.MetallicaService.Album SelectAlbum(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetallicaService/SelectAlbum", ReplyAction="http://tempuri.org/IMetallicaService/SelectAlbumResponse")]
        System.Threading.Tasks.Task<metallica_client.MetallicaService.Album> SelectAlbumAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetallicaService/GetAllAlbums", ReplyAction="http://tempuri.org/IMetallicaService/GetAllAlbumsResponse")]
        metallica_client.MetallicaService.AlbumList GetAllAlbums();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetallicaService/GetAllAlbums", ReplyAction="http://tempuri.org/IMetallicaService/GetAllAlbumsResponse")]
        System.Threading.Tasks.Task<metallica_client.MetallicaService.AlbumList> GetAllAlbumsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetallicaService/GetAllChats", ReplyAction="http://tempuri.org/IMetallicaService/GetAllChatsResponse")]
        metallica_client.MetallicaService.ChatList GetAllChats();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetallicaService/GetAllChats", ReplyAction="http://tempuri.org/IMetallicaService/GetAllChatsResponse")]
        System.Threading.Tasks.Task<metallica_client.MetallicaService.ChatList> GetAllChatsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetallicaService/GetChat", ReplyAction="http://tempuri.org/IMetallicaService/GetChatResponse")]
        metallica_client.MetallicaService.Chat GetChat(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetallicaService/GetChat", ReplyAction="http://tempuri.org/IMetallicaService/GetChatResponse")]
        System.Threading.Tasks.Task<metallica_client.MetallicaService.Chat> GetChatAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetallicaService/InsertChat", ReplyAction="http://tempuri.org/IMetallicaService/InsertChatResponse")]
        int InsertChat(metallica_client.MetallicaService.Chat chat);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetallicaService/InsertChat", ReplyAction="http://tempuri.org/IMetallicaService/InsertChatResponse")]
        System.Threading.Tasks.Task<int> InsertChatAsync(metallica_client.MetallicaService.Chat chat);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetallicaService/UpdateChat", ReplyAction="http://tempuri.org/IMetallicaService/UpdateChatResponse")]
        int UpdateChat(metallica_client.MetallicaService.Chat chat);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetallicaService/UpdateChat", ReplyAction="http://tempuri.org/IMetallicaService/UpdateChatResponse")]
        System.Threading.Tasks.Task<int> UpdateChatAsync(metallica_client.MetallicaService.Chat chat);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetallicaService/DeleteChat", ReplyAction="http://tempuri.org/IMetallicaService/DeleteChatResponse")]
        int DeleteChat(metallica_client.MetallicaService.Chat chat);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetallicaService/DeleteChat", ReplyAction="http://tempuri.org/IMetallicaService/DeleteChatResponse")]
        System.Threading.Tasks.Task<int> DeleteChatAsync(metallica_client.MetallicaService.Chat chat);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetallicaService/GetAllMessages", ReplyAction="http://tempuri.org/IMetallicaService/GetAllMessagesResponse")]
        metallica_client.MetallicaService.MessagesList GetAllMessages();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetallicaService/GetAllMessages", ReplyAction="http://tempuri.org/IMetallicaService/GetAllMessagesResponse")]
        System.Threading.Tasks.Task<metallica_client.MetallicaService.MessagesList> GetAllMessagesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetallicaService/GetMessage", ReplyAction="http://tempuri.org/IMetallicaService/GetMessageResponse")]
        metallica_client.MetallicaService.Messages GetMessage(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetallicaService/GetMessage", ReplyAction="http://tempuri.org/IMetallicaService/GetMessageResponse")]
        System.Threading.Tasks.Task<metallica_client.MetallicaService.Messages> GetMessageAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetallicaService/GetMessagesOfChat", ReplyAction="http://tempuri.org/IMetallicaService/GetMessagesOfChatResponse")]
        metallica_client.MetallicaService.MessagesList GetMessagesOfChat(int chatId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetallicaService/GetMessagesOfChat", ReplyAction="http://tempuri.org/IMetallicaService/GetMessagesOfChatResponse")]
        System.Threading.Tasks.Task<metallica_client.MetallicaService.MessagesList> GetMessagesOfChatAsync(int chatId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetallicaService/InsertMessage", ReplyAction="http://tempuri.org/IMetallicaService/InsertMessageResponse")]
        int InsertMessage(metallica_client.MetallicaService.Messages message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetallicaService/InsertMessage", ReplyAction="http://tempuri.org/IMetallicaService/InsertMessageResponse")]
        System.Threading.Tasks.Task<int> InsertMessageAsync(metallica_client.MetallicaService.Messages message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetallicaService/UpdateMessages", ReplyAction="http://tempuri.org/IMetallicaService/UpdateMessagesResponse")]
        int UpdateMessages(metallica_client.MetallicaService.Messages message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetallicaService/UpdateMessages", ReplyAction="http://tempuri.org/IMetallicaService/UpdateMessagesResponse")]
        System.Threading.Tasks.Task<int> UpdateMessagesAsync(metallica_client.MetallicaService.Messages message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetallicaService/DeleteMessages", ReplyAction="http://tempuri.org/IMetallicaService/DeleteMessagesResponse")]
        int DeleteMessages(metallica_client.MetallicaService.Messages message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetallicaService/DeleteMessages", ReplyAction="http://tempuri.org/IMetallicaService/DeleteMessagesResponse")]
        System.Threading.Tasks.Task<int> DeleteMessagesAsync(metallica_client.MetallicaService.Messages message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetallicaService/GetAllShows", ReplyAction="http://tempuri.org/IMetallicaService/GetAllShowsResponse")]
        metallica_client.MetallicaService.ShowList GetAllShows();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetallicaService/GetAllShows", ReplyAction="http://tempuri.org/IMetallicaService/GetAllShowsResponse")]
        System.Threading.Tasks.Task<metallica_client.MetallicaService.ShowList> GetAllShowsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetallicaService/GetShow", ReplyAction="http://tempuri.org/IMetallicaService/GetShowResponse")]
        metallica_client.MetallicaService.Show GetShow(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetallicaService/GetShow", ReplyAction="http://tempuri.org/IMetallicaService/GetShowResponse")]
        System.Threading.Tasks.Task<metallica_client.MetallicaService.Show> GetShowAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetallicaService/InsertShow", ReplyAction="http://tempuri.org/IMetallicaService/InsertShowResponse")]
        int InsertShow(metallica_client.MetallicaService.Show show);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetallicaService/InsertShow", ReplyAction="http://tempuri.org/IMetallicaService/InsertShowResponse")]
        System.Threading.Tasks.Task<int> InsertShowAsync(metallica_client.MetallicaService.Show show);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetallicaService/UpdateShow", ReplyAction="http://tempuri.org/IMetallicaService/UpdateShowResponse")]
        int UpdateShow(metallica_client.MetallicaService.Show show);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetallicaService/UpdateShow", ReplyAction="http://tempuri.org/IMetallicaService/UpdateShowResponse")]
        System.Threading.Tasks.Task<int> UpdateShowAsync(metallica_client.MetallicaService.Show show);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetallicaService/DeleteShow", ReplyAction="http://tempuri.org/IMetallicaService/DeleteShowResponse")]
        int DeleteShow(metallica_client.MetallicaService.Show show);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetallicaService/DeleteShow", ReplyAction="http://tempuri.org/IMetallicaService/DeleteShowResponse")]
        System.Threading.Tasks.Task<int> DeleteShowAsync(metallica_client.MetallicaService.Show show);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetallicaService/GetAllSongs", ReplyAction="http://tempuri.org/IMetallicaService/GetAllSongsResponse")]
        metallica_client.MetallicaService.SongList GetAllSongs();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetallicaService/GetAllSongs", ReplyAction="http://tempuri.org/IMetallicaService/GetAllSongsResponse")]
        System.Threading.Tasks.Task<metallica_client.MetallicaService.SongList> GetAllSongsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetallicaService/GetSong", ReplyAction="http://tempuri.org/IMetallicaService/GetSongResponse")]
        metallica_client.MetallicaService.Song GetSong(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetallicaService/GetSong", ReplyAction="http://tempuri.org/IMetallicaService/GetSongResponse")]
        System.Threading.Tasks.Task<metallica_client.MetallicaService.Song> GetSongAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetallicaService/GetAllSongsFromAlbum", ReplyAction="http://tempuri.org/IMetallicaService/GetAllSongsFromAlbumResponse")]
        metallica_client.MetallicaService.SongList GetAllSongsFromAlbum(int albumId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetallicaService/GetAllSongsFromAlbum", ReplyAction="http://tempuri.org/IMetallicaService/GetAllSongsFromAlbumResponse")]
        System.Threading.Tasks.Task<metallica_client.MetallicaService.SongList> GetAllSongsFromAlbumAsync(int albumId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetallicaService/InsertSong", ReplyAction="http://tempuri.org/IMetallicaService/InsertSongResponse")]
        int InsertSong(metallica_client.MetallicaService.Song song);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetallicaService/InsertSong", ReplyAction="http://tempuri.org/IMetallicaService/InsertSongResponse")]
        System.Threading.Tasks.Task<int> InsertSongAsync(metallica_client.MetallicaService.Song song);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetallicaService/UpdateSong", ReplyAction="http://tempuri.org/IMetallicaService/UpdateSongResponse")]
        int UpdateSong(metallica_client.MetallicaService.Song song);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetallicaService/UpdateSong", ReplyAction="http://tempuri.org/IMetallicaService/UpdateSongResponse")]
        System.Threading.Tasks.Task<int> UpdateSongAsync(metallica_client.MetallicaService.Song song);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetallicaService/DeleteSong", ReplyAction="http://tempuri.org/IMetallicaService/DeleteSongResponse")]
        int DeleteSong(metallica_client.MetallicaService.Song song);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetallicaService/DeleteSong", ReplyAction="http://tempuri.org/IMetallicaService/DeleteSongResponse")]
        System.Threading.Tasks.Task<int> DeleteSongAsync(metallica_client.MetallicaService.Song song);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetallicaService/GetAllUser", ReplyAction="http://tempuri.org/IMetallicaService/GetAllUserResponse")]
        metallica_client.MetallicaService.UserList GetAllUser();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetallicaService/GetAllUser", ReplyAction="http://tempuri.org/IMetallicaService/GetAllUserResponse")]
        System.Threading.Tasks.Task<metallica_client.MetallicaService.UserList> GetAllUserAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetallicaService/GetUser", ReplyAction="http://tempuri.org/IMetallicaService/GetUserResponse")]
        metallica_client.MetallicaService.User GetUser(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetallicaService/GetUser", ReplyAction="http://tempuri.org/IMetallicaService/GetUserResponse")]
        System.Threading.Tasks.Task<metallica_client.MetallicaService.User> GetUserAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetallicaService/InsertUser", ReplyAction="http://tempuri.org/IMetallicaService/InsertUserResponse")]
        int InsertUser(metallica_client.MetallicaService.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetallicaService/InsertUser", ReplyAction="http://tempuri.org/IMetallicaService/InsertUserResponse")]
        System.Threading.Tasks.Task<int> InsertUserAsync(metallica_client.MetallicaService.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetallicaService/UpdateUser", ReplyAction="http://tempuri.org/IMetallicaService/UpdateUserResponse")]
        int UpdateUser(metallica_client.MetallicaService.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetallicaService/UpdateUser", ReplyAction="http://tempuri.org/IMetallicaService/UpdateUserResponse")]
        System.Threading.Tasks.Task<int> UpdateUserAsync(metallica_client.MetallicaService.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetallicaService/DeleteUser", ReplyAction="http://tempuri.org/IMetallicaService/DeleteUserResponse")]
        int DeleteUser(metallica_client.MetallicaService.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetallicaService/DeleteUser", ReplyAction="http://tempuri.org/IMetallicaService/DeleteUserResponse")]
        System.Threading.Tasks.Task<int> DeleteUserAsync(metallica_client.MetallicaService.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetallicaService/Login", ReplyAction="http://tempuri.org/IMetallicaService/LoginResponse")]
        metallica_client.MetallicaService.User Login(metallica_client.MetallicaService.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetallicaService/Login", ReplyAction="http://tempuri.org/IMetallicaService/LoginResponse")]
        System.Threading.Tasks.Task<metallica_client.MetallicaService.User> LoginAsync(metallica_client.MetallicaService.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetallicaService/IsUserNameFree", ReplyAction="http://tempuri.org/IMetallicaService/IsUserNameFreeResponse")]
        bool IsUserNameFree(string uname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetallicaService/IsUserNameFree", ReplyAction="http://tempuri.org/IMetallicaService/IsUserNameFreeResponse")]
        System.Threading.Tasks.Task<bool> IsUserNameFreeAsync(string uname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetallicaService/GetSongRating", ReplyAction="http://tempuri.org/IMetallicaService/GetSongRatingResponse")]
        double GetSongRating(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetallicaService/GetSongRating", ReplyAction="http://tempuri.org/IMetallicaService/GetSongRatingResponse")]
        System.Threading.Tasks.Task<double> GetSongRatingAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetallicaService/GetAlbumRating", ReplyAction="http://tempuri.org/IMetallicaService/GetAlbumRatingResponse")]
        double GetAlbumRating(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetallicaService/GetAlbumRating", ReplyAction="http://tempuri.org/IMetallicaService/GetAlbumRatingResponse")]
        System.Threading.Tasks.Task<double> GetAlbumRatingAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetallicaService/GetAlbumRatingByUser", ReplyAction="http://tempuri.org/IMetallicaService/GetAlbumRatingByUserResponse")]
        int GetAlbumRatingByUser(int albumId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetallicaService/GetAlbumRatingByUser", ReplyAction="http://tempuri.org/IMetallicaService/GetAlbumRatingByUserResponse")]
        System.Threading.Tasks.Task<int> GetAlbumRatingByUserAsync(int albumId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetallicaService/InsertSongRating", ReplyAction="http://tempuri.org/IMetallicaService/InsertSongRatingResponse")]
        int InsertSongRating(int userId, int songId, int rating);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetallicaService/InsertSongRating", ReplyAction="http://tempuri.org/IMetallicaService/InsertSongRatingResponse")]
        System.Threading.Tasks.Task<int> InsertSongRatingAsync(int userId, int songId, int rating);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetallicaService/UpdateSongRating", ReplyAction="http://tempuri.org/IMetallicaService/UpdateSongRatingResponse")]
        int UpdateSongRating(int userId, int songId, int rating);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetallicaService/UpdateSongRating", ReplyAction="http://tempuri.org/IMetallicaService/UpdateSongRatingResponse")]
        System.Threading.Tasks.Task<int> UpdateSongRatingAsync(int userId, int songId, int rating);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetallicaService/DeleteSongRating", ReplyAction="http://tempuri.org/IMetallicaService/DeleteSongRatingResponse")]
        int DeleteSongRating(int userId, int songId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetallicaService/DeleteSongRating", ReplyAction="http://tempuri.org/IMetallicaService/DeleteSongRatingResponse")]
        System.Threading.Tasks.Task<int> DeleteSongRatingAsync(int userId, int songId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetallicaService/InsertAlbumRating", ReplyAction="http://tempuri.org/IMetallicaService/InsertAlbumRatingResponse")]
        int InsertAlbumRating(int userId, int albumId, int rating);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetallicaService/InsertAlbumRating", ReplyAction="http://tempuri.org/IMetallicaService/InsertAlbumRatingResponse")]
        System.Threading.Tasks.Task<int> InsertAlbumRatingAsync(int userId, int albumId, int rating);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetallicaService/UpdateAlbumRating", ReplyAction="http://tempuri.org/IMetallicaService/UpdateAlbumRatingResponse")]
        int UpdateAlbumRating(int userId, int albumId, int rating);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetallicaService/UpdateAlbumRating", ReplyAction="http://tempuri.org/IMetallicaService/UpdateAlbumRatingResponse")]
        System.Threading.Tasks.Task<int> UpdateAlbumRatingAsync(int userId, int albumId, int rating);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetallicaService/DeleteAlbumRating", ReplyAction="http://tempuri.org/IMetallicaService/DeleteAlbumRatingResponse")]
        int DeleteAlbumRating(int userId, int albumId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetallicaService/DeleteAlbumRating", ReplyAction="http://tempuri.org/IMetallicaService/DeleteAlbumRatingResponse")]
        System.Threading.Tasks.Task<int> DeleteAlbumRatingAsync(int userId, int albumId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMetallicaServiceChannel : metallica_client.MetallicaService.IMetallicaService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MetallicaServiceClient : System.ServiceModel.ClientBase<metallica_client.MetallicaService.IMetallicaService>, metallica_client.MetallicaService.IMetallicaService {
        
        public MetallicaServiceClient() {
        }
        
        public MetallicaServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MetallicaServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MetallicaServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MetallicaServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int InsertAlbum(metallica_client.MetallicaService.Album album) {
            return base.Channel.InsertAlbum(album);
        }
        
        public System.Threading.Tasks.Task<int> InsertAlbumAsync(metallica_client.MetallicaService.Album album) {
            return base.Channel.InsertAlbumAsync(album);
        }
        
        public int UpdateAlbum(metallica_client.MetallicaService.Album album) {
            return base.Channel.UpdateAlbum(album);
        }
        
        public System.Threading.Tasks.Task<int> UpdateAlbumAsync(metallica_client.MetallicaService.Album album) {
            return base.Channel.UpdateAlbumAsync(album);
        }
        
        public int DeleteAlbum(metallica_client.MetallicaService.Album album) {
            return base.Channel.DeleteAlbum(album);
        }
        
        public System.Threading.Tasks.Task<int> DeleteAlbumAsync(metallica_client.MetallicaService.Album album) {
            return base.Channel.DeleteAlbumAsync(album);
        }
        
        public metallica_client.MetallicaService.Album SelectAlbum(int id) {
            return base.Channel.SelectAlbum(id);
        }
        
        public System.Threading.Tasks.Task<metallica_client.MetallicaService.Album> SelectAlbumAsync(int id) {
            return base.Channel.SelectAlbumAsync(id);
        }
        
        public metallica_client.MetallicaService.AlbumList GetAllAlbums() {
            return base.Channel.GetAllAlbums();
        }
        
        public System.Threading.Tasks.Task<metallica_client.MetallicaService.AlbumList> GetAllAlbumsAsync() {
            return base.Channel.GetAllAlbumsAsync();
        }
        
        public metallica_client.MetallicaService.ChatList GetAllChats() {
            return base.Channel.GetAllChats();
        }
        
        public System.Threading.Tasks.Task<metallica_client.MetallicaService.ChatList> GetAllChatsAsync() {
            return base.Channel.GetAllChatsAsync();
        }
        
        public metallica_client.MetallicaService.Chat GetChat(int id) {
            return base.Channel.GetChat(id);
        }
        
        public System.Threading.Tasks.Task<metallica_client.MetallicaService.Chat> GetChatAsync(int id) {
            return base.Channel.GetChatAsync(id);
        }
        
        public int InsertChat(metallica_client.MetallicaService.Chat chat) {
            return base.Channel.InsertChat(chat);
        }
        
        public System.Threading.Tasks.Task<int> InsertChatAsync(metallica_client.MetallicaService.Chat chat) {
            return base.Channel.InsertChatAsync(chat);
        }
        
        public int UpdateChat(metallica_client.MetallicaService.Chat chat) {
            return base.Channel.UpdateChat(chat);
        }
        
        public System.Threading.Tasks.Task<int> UpdateChatAsync(metallica_client.MetallicaService.Chat chat) {
            return base.Channel.UpdateChatAsync(chat);
        }
        
        public int DeleteChat(metallica_client.MetallicaService.Chat chat) {
            return base.Channel.DeleteChat(chat);
        }
        
        public System.Threading.Tasks.Task<int> DeleteChatAsync(metallica_client.MetallicaService.Chat chat) {
            return base.Channel.DeleteChatAsync(chat);
        }
        
        public metallica_client.MetallicaService.MessagesList GetAllMessages() {
            return base.Channel.GetAllMessages();
        }
        
        public System.Threading.Tasks.Task<metallica_client.MetallicaService.MessagesList> GetAllMessagesAsync() {
            return base.Channel.GetAllMessagesAsync();
        }
        
        public metallica_client.MetallicaService.Messages GetMessage(int id) {
            return base.Channel.GetMessage(id);
        }
        
        public System.Threading.Tasks.Task<metallica_client.MetallicaService.Messages> GetMessageAsync(int id) {
            return base.Channel.GetMessageAsync(id);
        }
        
        public metallica_client.MetallicaService.MessagesList GetMessagesOfChat(int chatId) {
            return base.Channel.GetMessagesOfChat(chatId);
        }
        
        public System.Threading.Tasks.Task<metallica_client.MetallicaService.MessagesList> GetMessagesOfChatAsync(int chatId) {
            return base.Channel.GetMessagesOfChatAsync(chatId);
        }
        
        public int InsertMessage(metallica_client.MetallicaService.Messages message) {
            return base.Channel.InsertMessage(message);
        }
        
        public System.Threading.Tasks.Task<int> InsertMessageAsync(metallica_client.MetallicaService.Messages message) {
            return base.Channel.InsertMessageAsync(message);
        }
        
        public int UpdateMessages(metallica_client.MetallicaService.Messages message) {
            return base.Channel.UpdateMessages(message);
        }
        
        public System.Threading.Tasks.Task<int> UpdateMessagesAsync(metallica_client.MetallicaService.Messages message) {
            return base.Channel.UpdateMessagesAsync(message);
        }
        
        public int DeleteMessages(metallica_client.MetallicaService.Messages message) {
            return base.Channel.DeleteMessages(message);
        }
        
        public System.Threading.Tasks.Task<int> DeleteMessagesAsync(metallica_client.MetallicaService.Messages message) {
            return base.Channel.DeleteMessagesAsync(message);
        }
        
        public metallica_client.MetallicaService.ShowList GetAllShows() {
            return base.Channel.GetAllShows();
        }
        
        public System.Threading.Tasks.Task<metallica_client.MetallicaService.ShowList> GetAllShowsAsync() {
            return base.Channel.GetAllShowsAsync();
        }
        
        public metallica_client.MetallicaService.Show GetShow(int id) {
            return base.Channel.GetShow(id);
        }
        
        public System.Threading.Tasks.Task<metallica_client.MetallicaService.Show> GetShowAsync(int id) {
            return base.Channel.GetShowAsync(id);
        }
        
        public int InsertShow(metallica_client.MetallicaService.Show show) {
            return base.Channel.InsertShow(show);
        }
        
        public System.Threading.Tasks.Task<int> InsertShowAsync(metallica_client.MetallicaService.Show show) {
            return base.Channel.InsertShowAsync(show);
        }
        
        public int UpdateShow(metallica_client.MetallicaService.Show show) {
            return base.Channel.UpdateShow(show);
        }
        
        public System.Threading.Tasks.Task<int> UpdateShowAsync(metallica_client.MetallicaService.Show show) {
            return base.Channel.UpdateShowAsync(show);
        }
        
        public int DeleteShow(metallica_client.MetallicaService.Show show) {
            return base.Channel.DeleteShow(show);
        }
        
        public System.Threading.Tasks.Task<int> DeleteShowAsync(metallica_client.MetallicaService.Show show) {
            return base.Channel.DeleteShowAsync(show);
        }
        
        public metallica_client.MetallicaService.SongList GetAllSongs() {
            return base.Channel.GetAllSongs();
        }
        
        public System.Threading.Tasks.Task<metallica_client.MetallicaService.SongList> GetAllSongsAsync() {
            return base.Channel.GetAllSongsAsync();
        }
        
        public metallica_client.MetallicaService.Song GetSong(int id) {
            return base.Channel.GetSong(id);
        }
        
        public System.Threading.Tasks.Task<metallica_client.MetallicaService.Song> GetSongAsync(int id) {
            return base.Channel.GetSongAsync(id);
        }
        
        public metallica_client.MetallicaService.SongList GetAllSongsFromAlbum(int albumId) {
            return base.Channel.GetAllSongsFromAlbum(albumId);
        }
        
        public System.Threading.Tasks.Task<metallica_client.MetallicaService.SongList> GetAllSongsFromAlbumAsync(int albumId) {
            return base.Channel.GetAllSongsFromAlbumAsync(albumId);
        }
        
        public int InsertSong(metallica_client.MetallicaService.Song song) {
            return base.Channel.InsertSong(song);
        }
        
        public System.Threading.Tasks.Task<int> InsertSongAsync(metallica_client.MetallicaService.Song song) {
            return base.Channel.InsertSongAsync(song);
        }
        
        public int UpdateSong(metallica_client.MetallicaService.Song song) {
            return base.Channel.UpdateSong(song);
        }
        
        public System.Threading.Tasks.Task<int> UpdateSongAsync(metallica_client.MetallicaService.Song song) {
            return base.Channel.UpdateSongAsync(song);
        }
        
        public int DeleteSong(metallica_client.MetallicaService.Song song) {
            return base.Channel.DeleteSong(song);
        }
        
        public System.Threading.Tasks.Task<int> DeleteSongAsync(metallica_client.MetallicaService.Song song) {
            return base.Channel.DeleteSongAsync(song);
        }
        
        public metallica_client.MetallicaService.UserList GetAllUser() {
            return base.Channel.GetAllUser();
        }
        
        public System.Threading.Tasks.Task<metallica_client.MetallicaService.UserList> GetAllUserAsync() {
            return base.Channel.GetAllUserAsync();
        }
        
        public metallica_client.MetallicaService.User GetUser(int id) {
            return base.Channel.GetUser(id);
        }
        
        public System.Threading.Tasks.Task<metallica_client.MetallicaService.User> GetUserAsync(int id) {
            return base.Channel.GetUserAsync(id);
        }
        
        public int InsertUser(metallica_client.MetallicaService.User user) {
            return base.Channel.InsertUser(user);
        }
        
        public System.Threading.Tasks.Task<int> InsertUserAsync(metallica_client.MetallicaService.User user) {
            return base.Channel.InsertUserAsync(user);
        }
        
        public int UpdateUser(metallica_client.MetallicaService.User user) {
            return base.Channel.UpdateUser(user);
        }
        
        public System.Threading.Tasks.Task<int> UpdateUserAsync(metallica_client.MetallicaService.User user) {
            return base.Channel.UpdateUserAsync(user);
        }
        
        public int DeleteUser(metallica_client.MetallicaService.User user) {
            return base.Channel.DeleteUser(user);
        }
        
        public System.Threading.Tasks.Task<int> DeleteUserAsync(metallica_client.MetallicaService.User user) {
            return base.Channel.DeleteUserAsync(user);
        }
        
        public metallica_client.MetallicaService.User Login(metallica_client.MetallicaService.User user) {
            return base.Channel.Login(user);
        }
        
        public System.Threading.Tasks.Task<metallica_client.MetallicaService.User> LoginAsync(metallica_client.MetallicaService.User user) {
            return base.Channel.LoginAsync(user);
        }
        
        public bool IsUserNameFree(string uname) {
            return base.Channel.IsUserNameFree(uname);
        }
        
        public System.Threading.Tasks.Task<bool> IsUserNameFreeAsync(string uname) {
            return base.Channel.IsUserNameFreeAsync(uname);
        }
        
        public double GetSongRating(int id) {
            return base.Channel.GetSongRating(id);
        }
        
        public System.Threading.Tasks.Task<double> GetSongRatingAsync(int id) {
            return base.Channel.GetSongRatingAsync(id);
        }
        
        public double GetAlbumRating(int id) {
            return base.Channel.GetAlbumRating(id);
        }
        
        public System.Threading.Tasks.Task<double> GetAlbumRatingAsync(int id) {
            return base.Channel.GetAlbumRatingAsync(id);
        }
        
        public int GetAlbumRatingByUser(int albumId, int userId) {
            return base.Channel.GetAlbumRatingByUser(albumId, userId);
        }
        
        public System.Threading.Tasks.Task<int> GetAlbumRatingByUserAsync(int albumId, int userId) {
            return base.Channel.GetAlbumRatingByUserAsync(albumId, userId);
        }
        
        public int InsertSongRating(int userId, int songId, int rating) {
            return base.Channel.InsertSongRating(userId, songId, rating);
        }
        
        public System.Threading.Tasks.Task<int> InsertSongRatingAsync(int userId, int songId, int rating) {
            return base.Channel.InsertSongRatingAsync(userId, songId, rating);
        }
        
        public int UpdateSongRating(int userId, int songId, int rating) {
            return base.Channel.UpdateSongRating(userId, songId, rating);
        }
        
        public System.Threading.Tasks.Task<int> UpdateSongRatingAsync(int userId, int songId, int rating) {
            return base.Channel.UpdateSongRatingAsync(userId, songId, rating);
        }
        
        public int DeleteSongRating(int userId, int songId) {
            return base.Channel.DeleteSongRating(userId, songId);
        }
        
        public System.Threading.Tasks.Task<int> DeleteSongRatingAsync(int userId, int songId) {
            return base.Channel.DeleteSongRatingAsync(userId, songId);
        }
        
        public int InsertAlbumRating(int userId, int albumId, int rating) {
            return base.Channel.InsertAlbumRating(userId, albumId, rating);
        }
        
        public System.Threading.Tasks.Task<int> InsertAlbumRatingAsync(int userId, int albumId, int rating) {
            return base.Channel.InsertAlbumRatingAsync(userId, albumId, rating);
        }
        
        public int UpdateAlbumRating(int userId, int albumId, int rating) {
            return base.Channel.UpdateAlbumRating(userId, albumId, rating);
        }
        
        public System.Threading.Tasks.Task<int> UpdateAlbumRatingAsync(int userId, int albumId, int rating) {
            return base.Channel.UpdateAlbumRatingAsync(userId, albumId, rating);
        }
        
        public int DeleteAlbumRating(int userId, int albumId) {
            return base.Channel.DeleteAlbumRating(userId, albumId);
        }
        
        public System.Threading.Tasks.Task<int> DeleteAlbumRatingAsync(int userId, int albumId) {
            return base.Channel.DeleteAlbumRatingAsync(userId, albumId);
        }
    }
}
